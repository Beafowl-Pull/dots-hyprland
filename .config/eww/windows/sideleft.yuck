(defwidget sideleft_widget []
  (eventbox
    :onhoverlost "scripts/toggle-sideleft.sh --close &"
    (box
      :orientation "v" :space-evenly false
      (eventbox
        :onclick "scripts/toggle-sideleft.sh &"
        :onscroll "echo $(echo {} | sed -e 's/down/-U 3/g' -e 's/up/-A 3/g' | xargs light) && scripts/brightness osd &"
        :onmiddleclick "playerctl play-pause"
        :onrightclick "playerctl next || playerctl position `bc <<< \"100 * $(playerctl metadata mpris:length) / 1000000 / 100\"`"
        (box :class {BAR_HEIGHT >= 2 ? 'bar-height' : ''})
      )
      (box
        :style "
        min-height: ${RES_HEIGHT - BAR_HEIGHT - BAR_HEIGHT_BOTTOM}px;
        ${open_sideleft ? ANIM_ENTER[anim_set] : ANIM_EXIT[anim_set]}
        ${open_sideleft ? '' : 'margin-left: -800px;'}
        "
        (scroll
          :hscroll false :vscroll true
          :vexpand true
          (box
            :vexpand true
            :class "sidebar-window"
            :orientation "v" :space-evenly false :spacing 15
            (box ; Resources
              :orientation "h"
              :space-evenly false
              :spacing 15
              (box
                :class "sidebar-resource-value"
                :space-evenly false :spacing 5
                (label :class "icon-material txt-large"
                  :valign "center"
                  :text "data_saver_on"
                )
                (label :class "txt-smaller" :text "${round(EWW_CPU.avg, 0)}%")
                (progress
                  :valign "center"
                  :class "sidebar-prog-resource"
                  :value {round(EWW_CPU.avg, 0)}
                )
              )
              (box
                :class "sidebar-resource-value"
                :space-evenly false :spacing 10
                (label :class "icon-material txt-larger"
                  :valign "center"
                  :text "memory"
                )
                (box :orientation "v"
                  (label :xalign 0
                    :class "txt-smaller"
                    :text {memory.used}
                  )
                  (label :xalign 0
                    :class "txt-smaller"
                    :text "+${memory.swapused}"
                  )
                )
                (box
                  :valign "center"
                  :orientation "v" :space-evenly false
                  (progress
                    :valign "center"
                    :class "sidebar-prog-resource"
                    :value {memory.percentage}
                  )
                  (progress
                    :valign "center"
                    :class "sidebar-prog-resource"
                    :value {memory.swappercentage}
                  )
                )
              )
              (box
                :class "sidebar-resource-value"
                :space-evenly false :spacing 10
                :hexpand true
                (label :class "icon-material txt-larger"
                  :valign "center"
                  :text "hard_drive"
                )
                (label :xalign 0
                  :class "txt-smaller"
                  :text {diskfree}
                )
                (progress
                  :hexpand true
                  :valign "center"
                  :class "sidebar-prog-resource"
                  :value {diskfreepercent}
                )
              )
            )
            (box ; Music
              :class "sidebar-music-box"
              :hexpand true
              (overlay
                :hexpand true
                (box ; 0. Fallback background
                  :class "sidebar-music-thumbnail-fallback"
                )
                (box ; 1. The background
                  :class "sidebar-music-thumbnail"
                  :style "
                  ${mcover.image == 'null' ? '' : ('background-image: url(\'' + mcover.image + '\'); background-size: 100% auto; background-position: center')}
                  "
                )
                (box ; 2. Color tint
                  :class "sidebar-music-vignette"
                  :hexpand true
                )
                (box ; 3. Text and controls
                  :orientation "v"
                  :space-evenly false :spacing -5
                  (box ; Media source, output
                    :space-evenly false
                    :orientation "h"
                    (label :xalign 0
                      :hexpand true
                      :class "sidebar-music-source txt-hugeass"
                      :text "${mcover.color.source}"
                      :style "color: ${mcover.materialcolor.onPrimaryContainer};"
                    )
                    (box
                      :orientation "h" :space-evenly false :spacing 5
                      :halign "end"
                      :class "sidebar-music-output txt-small"
                      :style "
                      ${mcover.materialcolor.primary == 'null' ? '' : 'background-color: ${mcover.materialcolor.primary};'}
                      ${mcover.materialcolor.onPrimary == 'null' ? '' : 'color: ${mcover.materialcolor.onPrimary};'}
                      "
                      (label
                        :class "bar-icon-material sidebar-music-device"
                        :text "${volume.device == 'Headphones' ? '' : ''}"
                        :style "
                        ${mcover.materialcolor.onPrimary == 'null' ? '' : ('color: ' + mcover.materialcolor.onPrimary + ';')};
                        "
                      )
                      (label
                        :text "${volume.device}"
                        :style "
                        ${mcover.materialcolor.onPrimary == 'null' ? '' : ('color: ' + mcover.materialcolor.onPrimary + ';')};
                        "
                      )
                    )
                  )
                  (box ; Title, play button
                    :space-evenly false
                    :orientation "h"
                    (scroll
                      :class "sidebar-music-title-scroll"
                      :hexpand true
                      :hscroll true :vscroll false
                      (box
                        :orientation "v"
                        :space-evenly false
                        :valign "center"
                        (label :xalign 0
                          :class "sidebar-music-title txt-norm"
                          :style "
                          color: ${mcover.materialcolor.onPrimaryContainer};
                          "
                          :text "${strlength(mname.title) == 0 ? 'Music' : mname.title}"
                        )
                        (label :xalign 0
                          :class "sidebar-music-artist txt-small"
                          :style "
                          color: ${mcover.materialcolor.onPrimaryContainer};
                          "
                          :text "${mname.artist}"
                        )
                      )
                    )
                    (eventbox
                      :valign "center"
                      :class "txt-hugeass sidebar-music-playbtn"
                      :onclick "playerctl play-pause"
                      :cursor "pointer"
                      (box
                        :style "
                        ${mcover.materialcolor.primary == 'null' ? '' : 'background-color: ${mcover.materialcolor.primary};'}
                        ${mcover.materialcolor.onPrimary == 'null' ? '' : 'color: ${mcover.materialcolor.onPrimary};'}
                        "
                        "${mplay == 'Playing' ? 'pause' : 'play_arrow'}"
                      )
                    )
                  )
                  (box ; Slider and skip track buttons
                    :space-evenly false
                    :orientation "h"
                    (eventbox
                      :class "txt-larger sidebar-music-trackbtn"
                      :onclick "playerctl previous"
                      (box
                        :style "
                        ${mcover.materialcolor.onPrimaryContainer == 'null' ? '' : ('color: ' + mcover.materialcolor.onPrimaryContainer + ';')}
                        "
                        "skip_previous"
                      )
                    )
                    (overlay
                      :hexpand true
                      (box
                        :hexpand true
                        :valign "center"
                        :class "sidebar-music-progress"
                        :style "
                        background-image:
                        linear-gradient(to right,
                          ${mcover.materialcolor.onPrimaryContainer} ${music.position}%,
                          rgba(200, 200, 200, 0.6) ${music.position}%);
                        "
                      )
                      (label
                        :class "sidebar-music-progress-btn txt-large"
                        :valign "center"
                        :xalign {music.position == '' ? 0 : (music.position / 100)}
                        :style "
                        ${mcover.materialcolor.onPrimaryContainer == 'null' ? '' : ('color: ' + mcover.materialcolor.onPrimaryContainer + ';')}
                        "
                        :text "●"
                      )
                    )
                    ; ; Below is the proper scale widget, but doesn't follow Material colors
                    ; (scale
                      ;     :hexpand true
                      ;     :class "sidebar-music-slider"
                      ;     :style "
                      ;     highlight {
                      ;     color: red;
                      ;     }
                      ;     "
                      ;     :value {music.position}
                      ;     ; :onchange "playerctl position `bc <<< \"{} * $(playerctl metadata mpris:length) / 1000000 / 100\"`"
                    ; )
                    (eventbox
                      :class "txt-larger sidebar-music-trackbtn"
                      :onclick "playerctl next || playerctl position `bc <<< \"100 * $(playerctl metadata mpris:length) / 1000000 / 100\"`"
                      :cursor "pointer"
                      (box
                        :style "
                        color: ${mcover.materialcolor.onPrimaryContainer};
                        "
                        "skip_next"
                      )
                    )
                  )
                )
              )
            )
            (box
              :orientation "h"
              :space-evenly false
              :class "sidebar-waifu-scrollbg"
              :spacing 13
              (box
                :space-evenly false :orientation "h"
                (eventbox
                  :onscroll "scripts/scroll-waifu {} &"
                  :width 100
                  (box
                    :orientation "v"
                    :height {SCROLL_MULTIPLIER_WAIFUTAGS * SCROLL_TOSHOW_WAIFUTAGS}
                    (scroll :vscroll false :hscroll false
                      (box
                        :orientation "v"
                        :spacing 6
                        :valign "start"
                        :style "
                        ${ANIM_ENTER[1]}
                        margin-top: -${(SCROLL_MULTIPLIER_WAIFUTAGS * scroll_offset_waifu)}px;
                        margin-bottom: -${(arraylength(WAIFU_TAG_ID) - SCROLL_TOSHOW_WAIFUTAGS - scroll_offset_waifu) * SCROLL_MULTIPLIER_WAIFUTAGS}px;
                        "
                        (for id in WAIFU_TAG_ID
                          (button
                            :class "sidebar-waifu-tag"
                            :onclick "${EWW_CMD} update waifu=\"$(scripts/waifu-get.py --segs ${WAIFU_CATEGORIES_ARGS[id]})\" &"
                            (box
                              :space-evenly false :orientation "h"
                              ; (label
                              ;   :class "icon-material txt-smallie"
                              ;   :text {WAIFU_CATEGORIES_ICONS[id]}
                              ; )
                              (label
                                :class "txt-smallie"
                                :text {WAIFU_CATEGORIES[id]}
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
              (eventbox
                :onscroll "scripts/scroll-sideleft-favourite {} &"
                :hexpand true
                (scroll
                  :hexpand true
                  :hscroll true :vscroll false
                  (box
                    :orientation "v" :space-evenly false :spacing 15
                    (box :orientation "h" :spacing 5
                      (eventbox
                        :class "sidebar-waifu-actionbtn"
                        :cursor "pointer"
                        :onclick `mkdir -p ~/Pictures/Waifus/ && cp ${waifu.path} ~/Pictures/Waifus/eww_"$(date '+%Y_%m_%_d..%H.%M.%S')"${waifu.ext} && notify-send 'Saved pic to ~/Pictures/Waifus' eww_"$(date '+%Y_%m_%_d..%H.%M.%S')"${waifu.ext} -a 'eww' &`
                        (box
                          :space-evenly false :spacing 5
                          (label :class "icon-material txt-large"
                            :text "file_copy"
                          )
                          (label :class "txt-norm"
                            :text "Hoard"
                          )
                        )
                      )
                      (eventbox
                        :class "sidebar-waifu-actionbtn"
                        :cursor "pointer"
                        :onclick `xdg-open ${waifu.sauce} &`
                        (box
                          :space-evenly false :spacing 5
                          (label :class "icon-material txt-large"
                            :text "location_on"
                          )
                          (label :class "txt-norm"
                            :text "Sauce"
                          )
                        )
                      )
                    )
                    (eventbox
                      :vexpand true
                      :onclick "${EWW_CMD} update show_waifu=${!show_waifu} &"
                      (overlay
                        :vexpand true
                        (box
                          :class "sidebar-waifu-pic-bg"
                        )
                        (box
                          :class "sidebar-waifu-pic"
                          :style "
                          background-image: url('${waifu.path}');
                          ${waifu['size'][0] / waifu['size'][1] > 395 / 530 ?
                          'background-size: auto 100%;' : 'background-size: 100% auto;'
                          }
                          "
                        )
                        (revealer
                          :reveal {!show_waifu}
                          :duration "50ms"
                          :transition "crossfade"
                          (box
                            :class "sidebar-waifu-pic-cover"
                            (box
                              :valign "center"
                              :orientation "v"
                              :space-evenly false
                              (label :valign "center" :class "icon-material txt-badonkers" :text "visibility_off")
                              (label :valign "center" :class "txt-norm" :text "Click to unhide")
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (eventbox ; Quote
              :vexpand true
              :onscroll "scripts/scroll-quote {} &"
              :onclick "${EWW_CMD} update quote_index=${(quote_index + 1 + arraylength(quote_content)) % arraylength(quote_content)} &"
              (box
                ; :vexpand true
                :orientation "v" :space-evenly false
                :class "sidebar-quote"
                (box
                  :space-evenly false
                  (label  :xalign 0
                    :hexpand true
                    :angle 180
                    :class "icon-material txt-hugeass"
                    :text "format_quote"
                  )
                  (label :xalign 1
                    :class "bar-txt-small sidebar-section-title-text"
                    :text "${quote_index+1}/${arraylength(quote_content)}"
                  )
                )
                (label  :xalign 0 :yalign 1
                  :vexpand true
                  :class "txt-small"
                  :wrap true
                  :text {quote_content[quote_index]}
                )
                (label  :xalign 0.9 :yalign 0
                  :vexpand true
                  :class "txt-small"
                  :wrap true
                  :text {quote_author[quote_index]}
                )
                ; (label  :xalign 1 :valign "end"
                  ;   :class "icon-material txt-hugeass"
                  ;   :text "format_quote"
                ; )
              )
            )
            (box :vexpand true)
          )
        )
      )
      (eventbox
        :onclick "scripts/toggle-sideleft.sh &"
        :onscroll "echo $(echo {} | sed -e 's/down/-U 3/g' -e 's/up/-A 3/g' | xargs light) && scripts/brightness osd &"
        :onmiddleclick "playerctl play-pause"
        :onrightclick "playerctl next || playerctl position `bc <<< \"100 * $(playerctl metadata mpris:length) / 1000000 / 100\"`"
        (box :style "min-height: ${BAR_HEIGHT_BOTTOM}px;")
      )
    )
  )
)

(defwindow sideleft
  :monitor 0
  :stacking "fg"
  :namespace "eww"
  :geometry (geometry
    :anchor "top left"
  )
  (sideleft_widget)
)