(defwidget themerctl []
  (eventbox
    :onhoverlost "${EWW_CMD} close themer && ${EWW_CMD} update themer_open=false"
    (box
      :space-evenly false
      :orientation "v"
      :class "themer-menu-box"
      (box
        :style "padding-left: 10px; padding-top: 10px; font-size: 15pt;"
        :valign "start"
        :space-evenly false
        :spacing 4
        (button
          :class "themer-action-button themer-get"
          :onclick "cp './tmp/_colorscheme.colorpallete' './css/_colorscheme.scss' && cp './tmp/colors_generated.conf' ~/.config/hypr/colors.conf"
          ""
        )
        (button
          :class "themer-action-button themer-restore"
          :onclick "cp css/_colorscheme_default.scss css/_colorscheme.scss && cp ~/.config/hypr/colors_default.conf ~/.config/hypr/colors.conf"
          ""
        )
      )
      (label
        :class "themer-title"
        :text "Color profiles"
        :xalign 0
      )
      (box
        :space-evenly false
        :orientation "h"
        (label
          :class "themer-prompt"
          :text "Save "
        )
        (input
          :class "themer-input"
          :onaccept "${EWW_CMD} close themer && ${EWW_CMD} update themer_open=false && cp './css/_colorscheme.scss' './css/savedcolors/_colorscheme_{}.scss' && cp ~/.config/hypr/colors.conf ~/.config/hypr/savedcolors/colors_{}.conf"
        )
      )
      (box
        :halign "start"
        :space-evenly false
        :orientation "h"
        (label
          :text "Load "
          :class "themer-prompt"
        )
        (input
          :class "themer-input"
          :onaccept "${EWW_CMD} close themer && ${EWW_CMD} update themer_open=false && cp './css/savedcolors/_colorscheme_{}.scss' './css/_colorscheme.scss' && cp ~/.config/hypr/savedcolors/colors_{}.conf ~/.config/hypr/colors.conf"
        )
      )
      (label
        :class "themer-title"
        :text "Current pallete"
        :xalign 0
      )
      (box
        :spacing 3
        :orientation "h"
        :style "padding: 7px;"
        (box :class "themer-color-preview preview-0" )
        (box :class "themer-color-preview preview-1" )
        (box :class "themer-color-preview preview-2" )
        (box :class "themer-color-preview preview-3" )
        (box :class "themer-color-preview preview-4" )
        (box :class "themer-color-preview preview-5" )
        (box :class "themer-color-preview preview-6" )
        (box :class "themer-color-preview preview-7" )
      )
    )
  )
)

(defwindow themer
  :wm-ignore true
  :monitor 0
  :geometry (geometry
    :x "300px"
    :y "53px"
    :anchor "top right"
    :width "0px"
    :height "0px"
  )
  :focusable true
  (themerctl)
)

(defwidget themer []
  (eventbox
      :onhover "${EWW_CMD} update themer_hover=true"
      :onhoverlost "${EWW_CMD} update themer_hover=false"
      (button
          :class "themer-button-${themer_hover || themer_open}"
          :onclick "eww open --toggle themer && ${EWW_CMD} ${themer_open ? 'update themer_open=false' : 'update themer_open=true'}"
          :style "font-family: 'Material Symbols Rounded';"
          ''
      )
  )
  
  ; (eventbox
  ;   :onhover "${EWW_CMD} update themer_hover=true"
  ;   :onhoverlost "${EWW_CMD} update themer_hover=false"
  ;   (checkbox
  ;     :class "themer-button-${themer_hover || themer_open}"
  ;     :onchecked "eww open themer && ${EWW_CMD} update themer_open=true"
  ;     :onunchecked "eww open close themer && ${EWW_CMD} update themer_open=false"
  ;     :tooltip "Color manager"
  ;   )
  ; )
)